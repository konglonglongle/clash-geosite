name: Build geosite
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date -d '+8 hours' +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
          echo "ads=https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-domains.txt" >> $GITHUB_ENV
          echo "private1=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/private" >> $GITHUB_ENV
          echo "private2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list" >> $GITHUB_ENV
          echo "microsoft_cn=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/microsoft" >> $GITHUB_ENV
          echo "apple_cn=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "google_cn=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "games_cn1=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/category-games" >> $GITHUB_ENV
          echo "games_cn2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.list" >> $GITHUB_ENV
          echo "games_cn3=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.list" >> $GITHUB_ENV
          echo "netflix=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list" >> $GITHUB_ENV
          echo "disney=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list" >> $GITHUB_ENV
          echo "max=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBO/HBO.list" >> $GITHUB_ENV
          echo "primevideo=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrimeVideo/PrimeVideo.list" >> $GITHUB_ENV
          echo "appletv=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleTV/AppleTV.list" >> $GITHUB_ENV
          echo "youtube=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list" >> $GITHUB_ENV
          echo "tiktok=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.list" >> $GITHUB_ENV
          echo "bilibili=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.list" >> $GITHUB_ENV
          echo "openai=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list" >> $GITHUB_ENV
          echo "networktest=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list" >> $GITHUB_ENV
          echo "proxy=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy.list" >> $GITHUB_ENV
          echo "cn=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax.list" >> $GITHUB_ENV
        shell: bash

      - name: Delete current tag and release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
          repo: DustinWin/clash-geosite

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout cokebar/gfwlist2dnsmasq
        uses: actions/checkout@v4
        with:
          repository: cokebar/gfwlist2dnsmasq
          path: gfwlist2dnsmasq

      - name: Checkout DustinWin/clash-geoip
        uses: actions/checkout@v4
        with:
          repository: DustinWin/clash-geoip
          ref: release
          path: clash-geoip

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./community/go.mod
          cache-dependency-path: ./community/go.sum

      - name: Generate ads
        run: |
          mkdir -p ./community/mydata ./tmp ./publish ./domains
          curl -sSL ${ads} | grep -v '#' | sed '/^\s*$/d' > ./community/mydata/ads

      - name: Generate private
        run: |
          cat <<EOF > ./tmp/temp-private.txt
          full:clash.razord.top
          full:clash.metacubex.one
          full:yacd.haishan.me
          full:yacd.metacubex.one
          full:d.metacubex.one
          EOF
          curl -sSL ${private1} | grep -v '#' | sed '/^\s*$/d' >> ./tmp/temp-private.txt
          curl -sSL ${private2} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' >> ./tmp/temp-private.txt
          sort --ignore-case -u ./tmp/temp-private.txt > ./community/mydata/private
          
      - name: Generate microsoft-cn
        run: |
          count1=$(curl -sSL ${microsoft_cn} | grep 'include:' | wc -l)
          curl -sSL ${microsoft_cn} | grep -v '#' | grep '@cn' | sed 's/ *@cn$//g' > ./tmp/temp-microsoft-cn.txt
          for((i=0;i<count1;i++)); do
            archs1=$(curl -sSL ${microsoft_cn} | grep 'include:' | sed 's/^include://g' | sed -n "$((i+1))p")
            count2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | wc -l)
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep -v '#' | grep '@cn' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.txt
            for((j=0;j<count2;j++)); do
              archs2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | sed 's/^include://g' | sed -n "$((j+1))p")
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep -v '#' | grep '@cn' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.txt
            done
          done
          sort --ignore-case -u ./tmp/temp-microsoft-cn.txt > ./community/mydata/microsoft-cn

      - name: Generate apple-cn
        run: |
          curl -sSL ${apple_cn} | perl -ne '/^server=\/([^\/]+)\// && print "full:$1\n"' > ./community/mydata/apple-cn

      - name: Generate google-cn
        run: |
          curl -sSL ${google_cn} | perl -ne '/^server=\/([^\/]+)\// && print "full:$1\n"' > ./community/mydata/google-cn

      - name: Generate games-cn
        run: |
          count1=$(curl -sSL ${games_cn1} | grep 'include:' | wc -l)
          curl -sSL ${games_cn1} | grep -v '#' | grep '@cn' | sed 's/ *@cn$//g' > ./tmp/temp-games-cn.txt
          for((i=0;i<count1;i++)); do
            archs1=$(curl -sSL ${games_cn1} | grep 'include:' | sed 's/^include://g' | sed -n "$((i+1))p")
            count2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | wc -l)
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep -v '#' | grep '@cn' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.txt
            for((j=0;j<count2;j++)); do
              archs2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | sed 's/^include://g' | sed -n "$((j+1))p")
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep -v '#' | grep '@cn' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.txt
            done
          done
          curl -sSL ${games_cn2} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' >> ./tmp/temp-games-cn.txt
          curl -sSL ${games_cn3} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' >> ./tmp/temp-games-cn.txt
          sort --ignore-case -u ./tmp/temp-games-cn.txt > ./community/mydata/games-cn

      - name: Generate netflix
        run: |
          curl -sSL ${netflix} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/netflix

      - name: Generate disney
        run: |
          curl -sSL ${disney} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/disney

      - name: Generate max
        run: |
          curl -sSL ${max} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/max

      - name: Generate primevideo
        run: |
          curl -sSL ${primevideo} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/primevideo

      - name: Generate appletv
        run: |
          curl -sSL ${appletv} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/appletv

      - name: Generate youtube
        run: |
          curl -sSL ${youtube} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/youtube

      - name: Generate tiktok
        run: |
          curl -sSL ${tiktok} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/tiktok

      - name: Generate bilibili
        run: |
          curl -sSL ${bilibili} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/bilibili

      - name: Generate openai
        run: |
          curl -sSL ${openai} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/openai

      - name: Generate networktest
        run: |
          curl -sSL ${networktest} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/networktest
          cat <<EOF >> ./community/mydata/networktest
          keyword:ipv6-test
          keyword:ipv6test
          keyword:test-ipv6
          keyword:testipv6
          EOF

      - name: Generate proxy
        run: |
          cd ./gfwlist2dnsmasq || exit 1
          chmod +x ./gfwlist2dnsmasq.sh
          ./gfwlist2dnsmasq.sh -l -o ../tmp/temp-proxy.txt
          curl -sSL ${proxy} | grep -v '#' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' >> ../tmp/temp-proxy.txt
          sort --ignore-case -u ../tmp/temp-proxy.txt > ../community/mydata/proxy

      - name: Generate cn
        run: |
          curl -sSL ${cn} | grep -Ev '#|google' | grep 'DOMAIN' | sed 's/^DOMAIN,/full:/g' | sed 's/^DOMAIN-SUFFIX,//g' | sed 's/^DOMAIN-KEYWORD,/keyword:/g' > ./community/mydata/cn

      - name: copy `mydata` to `domains` and rename
        run: |
          cd ./community/mydata || exit 1
          for file in $(ls); do
            cp -f "${file}" "../../domains/${file}.txt"
          done

      - name: Generate geosite-all.dat
        run: |
          cd ./community
          go run ./ --datapath=./mydata --outputname geosite-all.dat

      - name: Generate geosite-all-lite.dat
        run: |
          rm -f ./community/mydata/ads
          cd ./community
          go run ./ --datapath=./mydata --outputname geosite-all-lite.dat

      - name: Generate geosite.dat
        run: |
          curl -sSL ${ads} | grep -v '#' | sed '/^\s*$/d' > ./community/mydata/ads
          rm -f ./community/mydata/netflix \
                ./community/mydata/disney \
                ./community/mydata/max \
                ./community/mydata/primevideo \
                ./community/mydata/appletv \
                ./community/mydata/youtube \
                ./community/mydata/tiktok \
                ./community/mydata/bilibili \
                ./community/mydata/openai
          cd ./community
          go run ./ --datapath=./mydata --outputname geosite.dat

      - name: Generate geosite-lite.dat
        run: |
          rm -f ./community/mydata/ads
          cd ./community
          go run ./ --datapath=./mydata --outputname geosite-lite.dat

      - name: Generate fake-ip-user.yaml
        run: |
          cat <<EOF > ./publish/fake-ip-user.yaml
          mode: rule
          log-level: silent
          allow-lan: true
          unified-delay: false
          tcp-concurrent: true
          external-controller-tls: 0.0.0.0:9090
          global-client-fingerprint: chrome
          profile: {store-selected: true, store-fake-ip: true}

          geodata-mode: true
          geox-url:
            geosite: "https://fastly.jsdelivr.net/gh/DustinWin/clash-geosite@release/geosite-lite.dat"
            geoip: "https://fastly.jsdelivr.net/gh/DustinWin/clash-geosite@release/geoip-lite.dat"
            mmdb: "https://fastly.jsdelivr.net/gh/DustinWin/clash-geosite@release/Country-lite.mmdb"

          dns:
            enable: true
            prefer-h3: true
            ipv6: true
            listen: 0.0.0.0:1053
            use-hosts: true
            fake-ip-range: 198.18.0.1/16
            enhanced-mode: fake-ip
            fake-ip-filter:
              - '*'
          EOF
          curl -sSL https://raw.githubusercontent.com/juewuy/ShellClash/master/public/fake_ip_filter.list | grep -v '#' | sed '/^\s*$/d' | sed "s/.*/'&'/g" | sed 's/^/    - /g' >> ./publish/fake-ip-user.yaml
          curl -sSL https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/all.txt | grep 'udp:' | grep -i '\.[A-Z]' | sed "s/^.*\/\//'/g" | sed "s/:.*\/.*/'/g" | sed 's/^/    - /g' >> ./publish/fake-ip-user.yaml
          cat <<EOF >> ./publish/fake-ip-user.yaml
              - 'adguardteam.github.io'
              - 'anti-ad.net'
            default-nameserver:
              - https://1.12.12.12/dns-query
              - https://223.5.5.5/dns-query
            nameserver:
              - https://doh.pub/dns-query
              - https://dns.alidns.com/dns-query
          EOF

      - name: Generate redir-host-user.yaml
        run: |
          cat <<EOF > ./publish/redir-host-user.yaml
          mode: rule
          log-level: silent
          allow-lan: true
          unified-delay: false
          tcp-concurrent: true
          external-controller-tls: 0.0.0.0:9090
          global-client-fingerprint: chrome
          profile: {store-selected: true, store-fake-ip: true}

          geodata-mode: true
          geox-url:
            geosite: "https://fastly.jsdelivr.net/gh/DustinWin/clash-geosite@release/geosite-lite.dat"
            geoip: "https://fastly.jsdelivr.net/gh/DustinWin/clash-geosite@release/geoip-lite.dat"
            mmdb: "https://fastly.jsdelivr.net/gh/DustinWin/clash-geosite@release/Country-lite.mmdb"

          dns:
            enable: true
            prefer-h3: true
            ipv6: true
            listen: 0.0.0.0:1053
            use-hosts: true
            fake-ip-range: 198.18.0.1/16
            enhanced-mode: fake-ip
            fake-ip-filter: ['+.*']
            default-nameserver:
              - https://1.12.12.12/dns-query
              - https://223.5.5.5/dns-query
            nameserver:
              - 'https://dns.google/dns-query#🪜 代理域名'
              - 'https://cloudflare-dns.com/dns-query#🪜 代理域名'
            proxy-server-nameserver:
              - https://doh.pub/dns-query
              - https://dns.alidns.com/dns-query
            nameserver-policy:
              'geosite:microsoft-cn,apple-cn,google-cn,games-cn': [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
              'geosite:cn,private': [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
          EOF
          rm -rf ./tmp

      - name: Get geoip relative files
        run: |
          cp -f ./clash-geoip/*.mmdb ./clash-geoip/*.dat ./clash-geoip/*.metadb ./clash-geoip/*.db ./publish

      - name: Build db and metadb file
        env:
          NO_SKIP: true
        run: |
          go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
          cd ./community || exit 1
          for file in $(ls *.dat | sed 's/\..*//g'); do
            geo convert site -i v2ray -o sing -f "./${file}.db" "./${file}.dat"
          done

      - name: Move files
        run: |
          cd ./community || exit 1
          for file in $(ls *.dat *.db); do
            install -Dp "./${file}" ../publish
          done
          cd ../publish || exit 1

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: latest
          tag: latest
          file_glob: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          cd ./publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Git push assets to "domains" branch
        run: |
          cd ./domains || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b domains
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin domains

      - name: Purge jsDelivr CDN
        run: |
          cd ./publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
          cd ../domains || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@domains/${file}"
          done
